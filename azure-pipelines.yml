# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
name: $(Date:yyyy).$(Month).$(DayOfMonth)-$(Rev:r)

trigger:
  branches:
    exclude:
    - '*' 

pool:
  name: estore-devops

#parameters:
#- name: build_version          # name of the parameter; required
#  type: string            # data types, see below
#  default: ''

resources:
  pipelines:
  - pipeline: 'service-repo'
    project: estore-devops
    source: 'test-publish-store-service-repo'

steps:

- download: service-repo
  artifact: store-service-repo

- script: ls -al $(PIPELINE.WORKSPACE)/service-repo/store-service-repo

- task: Maven@3
  displayName: "Set Project Version"
  inputs:
    mavenPomFile: '$(Pipeline.Workspace)/service-repo/store-service-repo/pom.xml'
    goals: 'versions:set'
    options: '-DnewVersion=$(Build.BuildNumber)'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false

- task: Maven@3
  displayName: "Run Maven Build"
  inputs:
    mavenPomFile: '$(Pipeline.Workspace)/service-repo/store-service-repo/pom.xml'
    goals: 'clean package'
    options: '-e -U'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false

- task: PublishCodeCoverageResults@1
  displayName: "Publish Jacoco Results"
  inputs:
    codeCoverageTool: 'JaCoCo'
    summaryFileLocation: '$(Pipeline.Workspace)/service-repo/store-service-repo/store-service/target/site/jacoco-ut/jacoco.xml'
    reportDirectory: '$(Pipeline.Workspace)/service-repo/store-service-repo/store-service/target/site/jacoco-ut'

- task: Bash@3
  displayName: "Zip App Jar"
  inputs:
    targetType: 'inline'
    script: |
      cp $(Pipeline.Workspace)/service-repo/store-service-repo/store-service/target/store-service-*.jar app.jar
      zip $(Build.ArtifactStagingDirectory)/app.zip app.jar
      
      wget https://github.com/microsoft/ApplicationInsights-Java/releases/download/3.0.2/applicationinsights-agent-3.0.2.jar
      zip -u $(Build.ArtifactStagingDirectory)/app.zip applicationinsights-agent-3.0.2.jar

- task: CopyFiles@2
  displayName: "Copy Jars to ArtifactStagingDirectory"
  inputs:
    SourceFolder: '$(Pipeline.Workspace)'
    Contents: |
      **/*.jar
      **/pom.xml
      **/*automation.sh
    TargetFolder: '$(build.artifactstagingdirectory)/jars'
    CleanTargetFolder: true

- task: PublishPipelineArtifact@1
  displayName: "Publish Jars"
  inputs:
    targetPath: '$(build.artifactstagingdirectory)/jars'
    artifact: 'jars'
    publishLocation: 'pipeline'

- task: PublishPipelineArtifact@1
  displayName: "Publish App Zip"
  inputs:
    targetPath: '$(build.artifactstagingdirectory)/app.zip'
    artifact: 'zip'
    publishLocation: 'pipeline'

- task: PublishPipelineArtifact@1
  displayName: "Publish Config"
  inputs:
    targetPath: '$(Pipeline.Workspace)/service-repo/store-service-repo/config'
    artifact: 'config'
    publishLocation: 'pipeline'

- task: PublishPipelineArtifact@1
  displayName: "Publish Functional Tests"
  inputs:
    targetPath: '$(Pipeline.Workspace)/service-repo/store-service-repo/store-service-functional-tests'
    artifact: 'store-service-functional-tests'
    publishLocation: 'pipeline'